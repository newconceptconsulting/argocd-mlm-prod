# ============================
# 1. Embedded etcd Deployment
# ============================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apisix-etcd
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apisix-etcd
  template:
    metadata:
      labels:
        app: apisix-etcd
    spec:
      containers:
      - name: etcd
        image: bitnami/etcd:latest
        env:
          - name: ALLOW_NONE_AUTHENTICATION
            value: "yes"
        ports:
          - containerPort: 2379
---
apiVersion: v1
kind: Service
metadata:
  name: apisix-etcd
  namespace: default
spec:
  selector:
    app: apisix-etcd
  ports:
    - port: 2379
      targetPort: 2379

# ============================
# 2. APISIX Deployment
# ============================
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apisix
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apisix
  template:
    metadata:
      labels:
        app: apisix
    spec:
      containers:
      - name: apisix
        image: apache/apisix:3.13.0-debian
        env:
          - name: ETCD_HOST
            value: "apisix-etcd.default.svc.cluster.local:2379"
        ports:
          - containerPort: 80
          - containerPort: 443
---
apiVersion: v1
kind: Service
metadata:
  name: apisix-gateway
  namespace: default
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
    - port: 443
      targetPort: 443
  selector:
    app: apisix

# ============================
# 3. Mock App Deployment (optional)
# ============================
# Uncomment this section to test routing
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: mock-api
#   namespace: default
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: mock-api
#   template:
#     metadata:
#       labels:
#         app: mock-api
#     spec:
#       containers:
#       - name: mock-api
#         image: clue/json-server
#         args: ["--watch", "/data/db.json", "--port", "3000"]
#         ports:
#           - containerPort: 3000
#         volumeMounts:
#           - name: mock-data
#             mountPath: /data
#       volumes:
#         - name: mock-data
#           configMap:
#             name: mock-api-data
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: mock-api
#   namespace: default
# spec:
#   selector:
#     app: mock-api
#   ports:
#     - port: 3000
#       targetPort: 3000
# ---
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: mock-api-data
#   namespace: default
# data:
#   db.json: |
#     {
#       "users": [
#         { "id": 1, "name": "Alice", "email": "alice@example.com" },
#         { "id": 2, "name": "Bob", "email": "bob@example.com" }
#       ],
#       "products": [
#         { "id": 1, "name": "Laptop", "price": 1200 },
#         { "id": 2, "name": "Phone", "price": 800 }
#       ]
#     }

# ============================
# 4. APISIXRoute (no backend)
# ============================
---
apiVersion: apisix.apache.org/v2
kind: ApisixRoute
metadata:
  name: example-route
  namespace: default
  annotations:
    kubernetes.io/ingress.class: apisix
spec:
  tls:
    - hosts:
        - example.mlm.nccnaga.com
      secretName: apisix-tls
  http:
    - name: example-rule
      match:
        hosts:
          - example.mlm.nccnaga.com
        paths:
          - /*
      backends: []
