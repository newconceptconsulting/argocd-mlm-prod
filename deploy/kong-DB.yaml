# --------------------------
# Postgres Database
# --------------------------
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: bitnami/postgresql:15
        env:
          - name: POSTGRES_DB
            value: kong
          - name: POSTGRES_USER
            value: kong
          - name: POSTGRES_PASSWORD
            value: kongpass
        ports:
          - containerPort: 5432
        volumeMounts:
          - name: postgres-storage
            mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432

---
# --------------------------
# Kong Postgres Secret
# --------------------------
apiVersion: v1
kind: Secret
metadata:
  name: kong-postgres
  namespace: default
type: Opaque
stringData:
  KONG_DATABASE: "postgres"
  KONG_PG_HOST: "postgres.default.svc.cluster.local"
  KONG_PG_PORT: "5432"
  KONG_PG_USER: "kong"
  KONG_PG_PASSWORD: "kongpass"
  KONG_PG_DATABASE: "kong"
---
# --------------------------
# Kong Deployment
# --------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong
  template:
    metadata:
      labels:
        app: kong
    spec:
      containers:
      - name: proxy
        image: kong:3.7
        envFrom:
        - secretRef:
            name: kong-postgres    # <-- use Postgres secret
        env:
          - name: KONG_DATABASE
            value: "postgres"
          - name: KONG_PG_HOST
            value: "postgres.default.svc.cluster.local"
          - name: KONG_PG_PORT
            value: "5432"
          - name: KONG_PG_USER
            value: "kong"
          - name: KONG_PG_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kong-postgres
                key: password
          - name: KONG_PG_DATABASE
            value: "kong"
          - name: KONG_PROXY_ACCESS_LOG
            value: "/dev/stdout"
          - name: KONG_ADMIN_ACCESS_LOG
            value: "/dev/stdout"
          - name: KONG_PROXY_ERROR_LOG
            value: "/dev/stderr"
          - name: KONG_ADMIN_ERROR_LOG
            value: "/dev/stderr"
          - name: KONG_ADMIN_LISTEN
            value: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
        # - name: KONG_PROXY_LISTEN
        #   value: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
        # - name: KONG_ADMIN_LISTEN
        #   value: "0.0.0.0:8001"
        # - name: KONG_DATABASE
        #   value: "postgres"
        # - name: KONG_PG_HOST
        #   value: "postgres.default.svc.cluster.local"
        # - name: KONG_PG_PORT
        #   value: "5432"
        # - name: KONG_PG_USER
        #   value: "kong"
        # - name: KONG_PG_PASSWORD
        #   value: "kongpass"
        # - name: KONG_PG_DATABASE
        #   value: "kong"
        ports:
        - name: proxy
          containerPort: 8000
        - name: proxy-ssl
          containerPort: 8443
        - name: admin
          containerPort: 8001
        volumeMounts:
        - name: tls-certs
          mountPath: /etc/kong/ssl
          readOnly: true
      volumes:
      - name: tls-certs
        secret:
          secretName: mlm.nccnaga.com-tls
---
# --------------------------
# Kong Service (LoadBalancer)
# --------------------------
apiVersion: v1
kind: Service
metadata:
  name: kong-proxy
  namespace: default
spec:
  type: LoadBalancer
  selector:
    app: kong
  ports:
  - name: proxy
    port: 80
    targetPort: 8000
  - name: proxy-ssl
    port: 443
    targetPort: 8443
  - name: admin
    port: 8001
    targetPort: 8001
