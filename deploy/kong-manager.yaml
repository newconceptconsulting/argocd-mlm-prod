# Kong Manager Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-manager
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kong-manager
  template:
    metadata:
      labels:
        app: kong-manager
    spec:
      containers:
        - name: manager
          image: kong/kong:3.9.0
          env:
            - name: KONG_DATABASE
              value: "off"
            - name: KONG_DECLARATIVE_CONFIG
              value: /kong/declarative/kong.yml
            - name: KONG_ADMIN_LISTEN
              value: "0.0.0.0:8444 ssl"
            - name: KONG_ADMIN_ACCESS_LOG
              value: "/dev/stdout"
            - name: KONG_ADMIN_ERROR_LOG
              value: "/dev/stderr"
            - name: KONG_ADMIN_TLS_CERT
              value: /kong/tls/tls.crt
            - name: KONG_ADMIN_TLS_KEY
              value: /kong/tls/tls.key
          ports:
            - containerPort: 8444
              name: admin
          volumeMounts:
            - name: kong-declarative
              mountPath: /kong/declarative
            - name: kong-tls
              mountPath: /kong/tls
              readOnly: true
      volumes:
        - name: kong-declarative
          configMap:
            name: kong-manager-declarative
        - name: kong-tls
          secret:
            secretName: kong-manager-tls  # <--- uses your existing secret
---
# Kong Manager Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kong-manager-ingress
  namespace: default
  annotations:
    konghq.com/strip-path: "false"
spec:
  ingressClassName: kong
  tls:
    - hosts:
        - kong-manager.nccnaga.com
      secretName: kong-manager-tls  # <--- uses your existing secret
  rules:
    - host: kong-manager.nccnaga.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kong-manager
                port:
                  number: 8444

